---


- name: AWS VPC with Cisco ISE and Meraki vMX
  hosts: localhost
  gather_facts: yes   # required for `ansible_date_time`
  vars_files:
    vars/main.yaml
  tasks:

  
  - name: Show VPC(s)
    amazon.aws.ec2_vpc_net:
      name: "{{ aws_vpc_name }}"
      cidr_block:  "{{ aws_vpc_cidr }}"
      region: "{{ aws_region }}"
    register: vpc

  - name: Create VPC
    amazon.aws.ec2_vpc_net:
      state: present
      name: "{{ aws_vpc_name }}"
      region: "{{ aws_region }}"
      cidr_block:  "{{ aws_vpc_cidr }}"
      tags:
        Name: "vpc_{{ project_name }}"
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: vpc

  - name: Show vpc
    ansible.builtin.debug: var=vpc




  - name: Create an Internet Gateway to connect VPC to Internet
    community.aws.ec2_vpc_igw:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      tags:
        Name: "zer0k_igw_{{ project_name }}"
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: igw

  - name: Show igw
    ansible.builtin.debug: var=igw




  - name: Create Public_Subnet
    amazon.aws.ec2_vpc_subnet:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ aws_public_subnet_cidr }}"
      region: "{{ aws_region }}"
      map_public: yes       # assigned public IP address by default
      tags:
        Name: zer0k_pod{{ pod_id }}_Public_Subnet
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: subnet_public

  - name: Show subnet_public
    ansible.builtin.debug: var=subnet_public




  - name: Create Private_Subnet
    amazon.aws.ec2_vpc_subnet:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ aws_private_subnet_cidr }}"
      region: "{{ aws_region }}"
      tags:
        Name: zer0k_pod{{ pod_id }}_Private_Subnet
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: subnet_private

  - name: Show subnet_private
    ansible.builtin.debug: var=subnet_private




  - name: Create Public Route Table; Add Route from VPC to Internet Gateway
    community.aws.ec2_vpc_route_table:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ subnet_public.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
      tags:
        Name: zer0k_pod{{ pod_id }}_RT_Public
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: rt_public

  - name: Show rt_public
    ansible.builtin.debug: var=rt_public




  - name: Create Private Route Table
    community.aws.ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ subnet_private.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
        # ðŸ’¡ Update this with other VPN networks after vMX creation! ðŸ’¡
        # - dest: 192.168.0.0/16
        #   instance_id: "{{ vmx.instance_id }}"          
      tags:
        Name: zer0k_pod{{ pod_id }}_RT_Private
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: rt_private

  - name: Show rt_private
    ansible.builtin.debug: var=rt_private



  - name: Show VPC(s)
    amazon.aws.ec2_vpc_net:
      name: "{{ aws_vpc_name }}"
      cidr_block:  "{{ aws_vpc_cidr }}"
      region: "{{ aws_region }}"
    register: vpc

  - name: Create SG-ISE Security Group
    amazon.aws.ec2_group:
      name: zer0k_pod{{ pod_id }}_SG-ISE
      description: zer0k_pod{{ pod_id }}_SG-ISE
      # vpc_id: "{{ vpcs.vpcs[0].id }}"
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ aws_region }}"
      rules:
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: 10.{{ pod_id }}.0.0/16
        rule_desc: Allow all traffic within VPC
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow SSH from anywhere
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: 192.168.0.0/16
        rule_desc: Allow all traffic from on-premises
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0    # any
          rule_desc: Allow All
      tags:
        Name: "{{ project_name }}"
        project: "{{ project_name }}"
        # start_date: "{{ ansible_date_time.date }}"
    register: sg_ise
    tags:
    - sg
    - security_group

...
