---


- name: AWS VPC with Cisco ISE and Meraki vMX
  hosts: localhost
  gather_facts: yes   # required for `ansible_date_time`
  vars_files:
    vars/main.yaml
  tasks:

  
  - name: Show VPC(s)
    amazon.aws.ec2_vpc_net:
      name: "{{ aws_vpc_name }}"
      cidr_block:  "{{ aws_vpc_cidr }}"
      region: "{{ aws_region }}"
    register: vpc

  - name: Create VPC
    amazon.aws.ec2_vpc_net:
      state: present
      name: "{{ aws_vpc_name }}"
      region: "{{ aws_region }}"
      cidr_block:  "{{ aws_vpc_cidr }}"
      tags:
        Name: "vpc_{{ project_name }}"
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: vpc

  - name: Show vpc
    ansible.builtin.debug: var=vpc




  - name: Create an Internet Gateway to connect VPC to Internet
    community.aws.ec2_vpc_igw:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      tags:
        Name: "igw_{{ project_name }}"
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: igw

  - name: Show igw
    ansible.builtin.debug: var=igw




  - name: Create Public_Subnet
    amazon.aws.ec2_vpc_subnet:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ aws_public_subnet_cidr }}"
      region: "{{ aws_region }}"
      map_public: yes       # assigned public IP address by default
      tags:
        Name: Public_Subnet
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: subnet_public

  - name: Show subnet_public
    ansible.builtin.debug: var=subnet_public




  - name: Create Private_Subnet
    amazon.aws.ec2_vpc_subnet:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      cidr: "{{ aws_private_subnet_cidr }}"
      region: "{{ aws_region }}"
      tags:
        Name: Private_Subnet
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: subnet_private

  - name: Show subnet_private
    ansible.builtin.debug: var=subnet_private




  - name: Create Public Route Table; Add Route from VPC to Internet Gateway
    community.aws.ec2_vpc_route_table:
      state: present
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ subnet_public.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
      tags:
        Name: RT_Public
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: rt_public

  - name: Show rt_public
    ansible.builtin.debug: var=rt_public




  - name: Create Private Route Table
    community.aws.ec2_vpc_route_table:
      vpc_id: "{{ vpc.vpc.id }}"
      subnets:
        - "{{ subnet_private.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
        # ðŸ’¡ Update this with other VPN networks after vMX creation! ðŸ’¡
        # - dest: 192.168.0.0/16
        #   instance_id: "{{ vmx.instance_id }}"          
      tags:
        Name: RT_Private
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
    register: rt_private

  - name: Show rt_private
    ansible.builtin.debug: var=rt_private



  - name: Show VPC(s)
    amazon.aws.ec2_vpc_net:
      name: "{{ aws_vpc_name }}"
      cidr_block:  "{{ aws_vpc_cidr }}"
      region: "{{ aws_region }}"
    register: vpc

  - name: Create SG-ISE Security Group
    amazon.aws.ec2_group:
      name: SG-ISE
      description: SG-ISE
      # vpc_id: "{{ vpcs.vpcs[0].id }}"
      vpc_id: "{{ vpc.vpc.id }}"
      region: "{{ aws_region }}"
      rules:
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: 172.31.0.0/16
        rule_desc: Allow all traffic within VPC
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Allow SSH from anywhere
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: 192.168.0.0/16
        rule_desc: Allow all traffic from on-premises
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0    # any
          rule_desc: Allow All
      tags:
        Name: SG-ISE
        project: "{{ project_name }}"
        # start_date: "{{ ansible_date_time.date }}"
    register: sg_ise
    tags:
    - sg
    - security_group

  - name: Gather information about all availability zones
    amazon.aws.aws_az_info:


  - name: Create ISE 3.1 Instance in AWS
    loop: "{{ ise_nodes }}"
    amazon.aws.ec2_instance:
      state: present
      region: "{{ aws_region }}"
      vpc_subnet_id: "{{ subnet_private.subnet.id }}"
      image_id: "{{ aws_ise_ami }}"
      instance_type: "{{ item.instance_type | default( aws_ise_instance_type ) }}"
      key_name: "{{ ssh_keypair_name }}"
      network:
        assign_public_ip: yes
        delete_on_termination: yes
        # below references ./vars/main.yaml line 84 - private_ip which is statically defined as desired ISE IP
        # note that "item" references an index in an array as part of a loop, similar to 'array(i)' in C++
        private_ip_address: "{{ item.private_ip}}"
      security_group: "{{ sg_ise.group_id }}"
      volumes:
        - device_name: /dev/sda1
          ebs:
            delete_on_termination: true
            volume_size: "{{ item.volume_size | default( 300 ) }}"
      wait: yes
      tags:
        # note that "item" references an index in an array as part of a loop, similar to 'array(i)' in C++
        Name: "{{ item.name }}"
        product: "ISE"
        hostname: "{{ item.name }}"
        project: "{{ project_name }}"
        start_date: "{{ ansible_date_time.date }}"
        role: "{{ item.role | default( '') }}"
        personas: "{{ item.personas | default( 'standalone') }}"
      user_data: "hostname={{ item.name | lower }}\nprimarynameserver={{ ise_dns_server }}\ndnsdomain={{ domain_name }}\nntpserver={{ ise_ntp_server }}\ntimezone={{ ise_timezone }}\nusername={{ ise_username }}\npassword={{ ise_password }}"
    register: instances

  - name: Show ISE Instances
    ansible.builtin.debug: var=instances




  #
  # Advertise the same internal IP for public and private DNS
  #
#  - name: Add public DNS entry for the ISE node(s)
#    loop: "{{ ise_nodes }}"
#    community.aws.route53:
#      state: present
#      zone: "{{ domain_name }}"
#      record: "{{ item.name }}.{{ domain_name }}"
#      overwrite: yes
#      private_zone: no
#      type: A
#      ttl: 7200
#      value: "{{ item.private_ip }}"
#      wait: no

#  - name: Add private DNS entry for the ISE node(s)
#    loop: "{{ ise_nodes }}"
#    community.aws.route53:
#      state: present
#      zone: "{{ domain_name }}"
#      record: "{{ item.name }}.{{ domain_name }}"
#      overwrite: yes
#      private_zone: yes
#      type: A
#      ttl: 7200
#      value: "{{ item.private_ip }}"
#      wait: no




  - name: Show SSH Commands for ISE Instances
    loop: "{{ ise_nodes }}"
    ansible.builtin.debug:
      msg: 
      # note that "item" references an index in an array as part of a loop, similar to 'array(i)' in C++
      - "ping {{ item.private_ip }}"
      - "ssh -i {{ ssh_keypair_directory}}/{{ ssh_keypair_name }}.pem {{ ise_username }}@{{ item.private_ip }}"
      - "ping {{ item.name }}.{{ domain_name }}"
      - "ssh -i {{ ssh_keypair_directory}}/{{ ssh_keypair_name }}.pem {{ ise_username }}@{{ item.name }}.{{ domain_name }}"


...
